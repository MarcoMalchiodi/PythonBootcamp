/*
Sass, which stands for "Syntactically Awesome Style Sheets," is a popular preprocessor scripting 
language that is used to generate Cascading Style Sheets (CSS). Preprocessors are tools that allow 
you to write more maintainable and efficient CSS code by introducing features and syntax that are not 
natively available in standard CSS.

Sass provides several features that make it easier and more powerful to work with stylesheets, including:

1. Variables: You can define variables to store values like colors, font sizes, and spacing, making 
it easier to maintain a consistent design throughout your project.

2. Nesting: Sass allows you to nest CSS rules within one another, which helps improve the organization 
of your styles and makes the code more readable.

3. Mixins: Mixins are reusable blocks of CSS properties and values that can be included in other rules. 
This is useful for maintaining consistent styles and reducing duplication.

4. Functions: You can create and use functions to perform calculations and transformations on values 
within your stylesheets.

5. Inheritance: Sass supports the concept of inheritance, allowing one CSS class to inherit styles 
from another, making it more modular and flexible.

6. Importing: You can split your styles into multiple files and import them into a main Sass file, 
making it easier to manage large projects.

Sass files use a different file extension (.scss or .sass) and need to be compiled into standard CSS 
files before they can be used in a web project. There are various tools and build systems available that 
can compile Sass into CSS, such as Ruby Sass, Node-sass, and LibSass.

Sass is widely used in web development to streamline the process of writing and maintaining stylesheets,
and it helps developers write more organized and efficient CSS code.
*/




// Example
$text-color: red;

  .header{
    text-align: center;
  }
  .blog-post, h2 {
    color: $text-color;
  }
